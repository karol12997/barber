import { options } from 'preact';
import { COMPONENT, DIFF, DIFFED, FORCE } from '../renderToOpcodes/constants.js';
export function runWithForce(cb) {
    // save vnode and its `_component` in WeakMap
    const m = new WeakMap();
    const oldDiff = options[DIFF];
    options[DIFF] = (vnode) => {
        if (oldDiff) {
            oldDiff(vnode);
        }
        // when `options[DIFF]` is called, a newVnode is passed in
        // so its `vnode[COMPONENT]` should be null,
        // but it will be set later
        Object.defineProperty(vnode, COMPONENT, {
            configurable: true,
            set(c) {
                m.set(vnode, c);
                if (c) {
                    c[FORCE] = true;
                }
            },
            get() {
                return m.get(vnode);
            },
        });
    };
    const oldDiffed = options[DIFFED];
    options[DIFFED] = (vnode) => {
        if (oldDiffed) {
            oldDiffed(vnode);
        }
        // delete is a reverse operation of previous `Object.defineProperty`
        delete vnode[COMPONENT];
        // restore
        vnode[COMPONENT] = m.get(vnode);
    };
    try {
        cb();
    }
    finally {
        options[DIFF] = oldDiff;
        options[DIFFED] = oldDiffed;
    }
}
//# sourceMappingURL=runWithForce.js.map
import type { Worklet, WorkletRefImpl } from '@lynx-js/react/worklet-runtime/bindings';
import type { BackgroundSnapshotInstance } from './backgroundSnapshot.js';
export declare const enum DynamicPartType {
    Attr = 0,
    Spread = 1,
    Slot = 2,
    Children = 3,
    ListChildren = 4,
    MultiChildren = 5
}
interface Snapshot {
    create: null | ((ctx: SnapshotInstance) => FiberElement[]);
    update: null | ((ctx: SnapshotInstance, index: number, oldValue: any) => void)[];
    slot: [DynamicPartType, number][];
    isListHolder?: boolean;
    cssId?: number | undefined;
    entryName?: string | undefined;
}
export declare let __page: FiberElement;
export declare let __pageId: number;
export declare function setupPage(page: FiberElement): void;
export declare function clearPage(): void;
export declare const snapshotManager: {
    values: Map<string, Snapshot>;
};
export declare const snapshotInstanceManager: {
    nextId: number;
    values: Map<number, SnapshotInstance>;
    clear(): void;
};
export declare const backgroundSnapshotInstanceManager: {
    nextId: number;
    values: Map<number, BackgroundSnapshotInstance>;
    clear(): void;
    updateId(id: number, newId: number): void;
    getValueBySign(str: string): unknown;
};
export declare function createSnapshot(uniqID: string, create: Snapshot['create'] | null, update: Snapshot['update'] | null, slot: Snapshot['slot'], cssId?: number, entryName?: string): string;
export interface WithChildren {
    childNodes: WithChildren[];
}
export declare function traverseSnapshotInstance<I extends WithChildren>(si: I, callback: (si: I) => void): void;
export interface SerializedSnapshotInstance {
    id: number;
    type: string;
    values?: any[] | undefined;
    children?: SerializedSnapshotInstance[] | undefined;
}
export declare class SnapshotInstance {
    type: string;
    __id: number;
    __snapshot_def: Snapshot;
    __elements?: FiberElement[] | undefined;
    __element_root?: FiberElement | undefined;
    __values?: any[] | undefined;
    __current_slot_index: number;
    __ref_set?: Set<string>;
    __worklet_ref_set?: Set<WorkletRefImpl<any> | Worklet>;
    __listItemPlatformInfo?: any;
    constructor(type: string, id?: number);
    ensureElements(): void;
    unRenderElements(): void;
    takeElements(): SnapshotInstance;
    private __parent;
    private __firstChild;
    private __lastChild;
    private __previousSibling;
    private __nextSibling;
    get parentNode(): SnapshotInstance | null;
    get nextSibling(): SnapshotInstance | null;
    contains(child: SnapshotInstance): boolean;
    get childNodes(): SnapshotInstance[];
    __insertBefore(node: SnapshotInstance, beforeNode?: SnapshotInstance): void;
    __removeChild(node: SnapshotInstance): void;
    insertBefore(newNode: SnapshotInstance, existingNode?: SnapshotInstance): void;
    removeChild(child: SnapshotInstance): void;
    setAttribute(key: string | number, value: any): void;
    toJSON(): Omit<SerializedSnapshotInstance, 'children'> & {
        children: SnapshotInstance[] | undefined;
    };
}
export {};

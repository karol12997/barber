import { SnapshotInstance } from '../snapshot.js';
declare const globalRefsToRemove: Map</* commitId */ number, Map</* sign */ string, /* ref */ any>>;
declare const globalRefsToSet: Map</* commitId */ number, Record<string, number>>;
declare function unref(snapshot: SnapshotInstance, recursive: boolean): void;
declare function updateBackgroundRefs(commitId: number): void;
declare function updateRef(snapshot: SnapshotInstance, expIndex: number, oldValue: any, elementIndex: number, spreadKey: string): void;
declare function takeGlobalRefPatchMap(): Record<string, number | null>;
declare function transformRef(ref: unknown): Function | (object & Record<'current', unknown>) | null | undefined;
declare function markRefToRemove(sign: string, ref: unknown): void;
export { updateRef, takeGlobalRefPatchMap, updateBackgroundRefs, unref, transformRef, globalRefsToRemove, globalRefsToSet, markRefToRemove, };
